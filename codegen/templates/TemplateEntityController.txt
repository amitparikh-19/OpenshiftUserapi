package com.kd.apps.ctrlr;

import java.security.Principal;
import javax.websocket.server.PathParam;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import com.kd.apps.model.RespDeletedEntity;
import com.kd.apps.model.TemplateEntity;
import com.kd.apps.srvc.TemplateEntitySrvc;
import com.kd.apps.exception.ServerException;

@RestController
@RequestMapping("/templateEntitys")
public class TemplateEntityCtrlr extends BaseAbstractCtrlr<TemplateEntity, ID> {

	private TemplateEntitySrvc templateEntitySrvc;
	
	@Autowired
	public TemplateEntityCtrlr(TemplateEntitySrvc templateEntitySrvc) {
		super(templateEntitySrvc, "templateEntitys");
		this.templateEntitySrvc = templateEntitySrvc;
	}

	@Override
	@RequestMapping(method = RequestMethod.POST)
	public ResponseEntity<TemplateEntity> create(@RequestBody TemplateEntity inputentity, Principal principal)  throws ServerException{
		return createEntity(inputentity, principal);
	}

	@Override
	@RequestMapping(value = "{id}", method = RequestMethod.GET)
	public ResponseEntity<TemplateEntity> read(@PathVariable(value = "id") ID id, Principal principal)  throws ServerException{
		return readEntity(id, principal);
	}

	@Override
	@RequestMapping(method = RequestMethod.GET)
	public ResponseEntity<Iterable<TemplateEntity>> readAll(Principal principal)  throws ServerException{
		return readAllEntities(principal);
	}

	@Override
	@RequestMapping(value = "/pageable", method = RequestMethod.GET)
	public ResponseEntity<Iterable<TemplateEntity>> readAllPageable(@PathParam("firstresult") Integer firstresult,
			@PathParam("maxresult") Integer maxresult, @PathParam("sortdir") String sortdir,
			@PathParam("sortfield") String sortfield, Principal principal)  throws ServerException{
		return readAllEntitiesPageable(firstresult, maxresult, sortdir, sortfield, principal);
	}

	@Override
	@RequestMapping(value = "{id}", method = RequestMethod.PUT)
	public ResponseEntity<TemplateEntity> update(@PathVariable(value = "id") ID id, @RequestBody TemplateEntity tobemerged,
			Principal principal)  throws ServerException{
		return updateEntity(id, tobemerged, principal);
	}

	@Override
	@RequestMapping(value = "{id}", method = RequestMethod.DELETE)
	public ResponseEntity<RespDeletedEntity> delete(@PathVariable(value = "id") ID id, Principal principal)  throws ServerException{
		return deleteEntity(id, principal);
	}
	
	@RequestMapping(value = "/pagesearch", method = RequestMethod.GET)
	public ResponseEntity<Iterable<TemplateEntity>> readAllPageable(@PathParam("firstresult") Integer firstresult,
			@PathParam("maxresult") Integer maxresult, @PathParam("sortdir") String sortdir,
			@PathParam("sortfield") String sortfield,@RequestParam(value="params",required=false) String params, Principal principal)  throws ServerException{
		SpecificationsBuilder<TemplateEntity> builder = new SpecificationsBuilder<TemplateEntity>();
        Specification<TemplateEntity> spec = builder.buildSpecifications(params);
		return readAllEntitiesPageSearchable(firstresult, maxresult, sortdir, sortfield, spec, principal);
	}
}